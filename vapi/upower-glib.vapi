/* upower-glib.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Up", gir_namespace = "UPowerGlib", gir_version = "1.0", lower_case_cprefix = "up__")]
namespace Up {
	[CCode (cheader_filename = "upower.h", type_id = "up_client_get_type ()")]
	public class Client : GLib.Object, GLib.AsyncInitable, GLib.Initable {
		[CCode (cname = "up_client_new", has_construct_function = false)]
		[Version (since = "0.9.0")]
		public Client ();
		[CCode (cname = "up_client_new_async", has_construct_function = false)]
		[Version (since = "0.99.14")]
		public async Client.@async (GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (cname = "up_client_new_full", has_construct_function = false)]
		[Version (since = "0.99.5")]
		public Client.full (GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (cname = "up_client_get_critical_action")]
		[Version (since = "1.0")]
		public string get_critical_action ();
		[CCode (cname = "up_client_get_daemon_version")]
		[Version (since = "0.9.0")]
		public unowned string get_daemon_version ();
		[CCode (cname = "up_client_get_devices")]
		[Version (deprecated = true, deprecated_since = "0.99.8", since = "0.9.0")]
		public GLib.GenericArray<Up.Device> get_devices ();
		[CCode (cname = "up_client_get_devices2")]
		[Version (since = "0.99.8")]
		public GLib.GenericArray<Up.Device> get_devices2 ();
		[CCode (cname = "up_client_get_devices_async")]
		[Version (since = "0.99.14")]
		public async GLib.GenericArray<Up.Device> get_devices_async (GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (cname = "up_client_get_display_device")]
		[Version (since = "1.0")]
		public Up.Device get_display_device ();
		[CCode (cname = "up_client_get_lid_is_closed")]
		[Version (since = "0.9.0")]
		public bool get_lid_is_closed ();
		[CCode (cname = "up_client_get_lid_is_present")]
		[Version (since = "0.9.2")]
		public bool get_lid_is_present ();
		[CCode (cname = "up_client_get_on_battery")]
		[Version (since = "0.9.0")]
		public bool get_on_battery ();
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public string daemon_version { owned get; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool lid_is_closed { get; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool lid_is_present { get; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool on_battery { get; }
		[Version (since = "0.9.0")]
		public virtual signal void device_added (Up.Device device);
		[Version (since = "1.0")]
		public virtual signal void device_removed (string object_path);
	}
	[CCode (cheader_filename = "upower.h", type_id = "up_device_get_type ()")]
	public class Device : GLib.Object {
		[CCode (cname = "up_device_new", has_construct_function = false)]
		[Version (since = "0.9.0")]
		public Device ();
		[CCode (cname = "up_device_get_history_sync")]
		[Version (since = "0.9.0")]
		public GLib.GenericArray<Up.HistoryItem> get_history_sync (string type, uint timespec, uint resolution, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (cname = "up_device_get_object_path")]
		[Version (since = "0.9.0")]
		public unowned string get_object_path ();
		[CCode (cname = "up_device_get_statistics_sync")]
		[Version (since = "0.9.0")]
		public GLib.GenericArray<Up.StatsItem> get_statistics_sync (string type, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (cname = "up_device_kind_from_string")]
		[Version (since = "0.9.0")]
		public static Up.DeviceKind kind_from_string (string type);
		[CCode (cname = "up_device_kind_to_string")]
		[Version (since = "0.9.0")]
		public static unowned string kind_to_string (Up.DeviceKind type_enum);
		[CCode (cname = "up_device_level_from_string")]
		[Version (since = "1.0")]
		public static Up.DeviceLevel level_from_string (string level);
		[CCode (cname = "up_device_level_to_string")]
		[Version (since = "1.0")]
		public static unowned string level_to_string (Up.DeviceLevel level_enum);
		[CCode (cname = "up_device_refresh_sync")]
		[Version (since = "0.9.0")]
		public bool refresh_sync (GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (cname = "up_device_set_object_path_sync")]
		[Version (since = "0.9.0")]
		public bool set_object_path_sync (string object_path, GLib.Cancellable? cancellable = null) throws GLib.Error;
		[CCode (cname = "up_device_state_from_string")]
		[Version (since = "0.9.0")]
		public static Up.DeviceState state_from_string (string state);
		[CCode (cname = "up_device_state_to_string")]
		[Version (since = "0.9.0")]
		public static unowned string state_to_string (Up.DeviceState state_enum);
		[CCode (cname = "up_device_technology_from_string")]
		[Version (since = "0.9.0")]
		public static Up.DeviceTechnology technology_from_string (string technology);
		[CCode (cname = "up_device_technology_to_string")]
		[Version (since = "0.9.0")]
		public static unowned string technology_to_string (Up.DeviceTechnology technology_enum);
		[CCode (cname = "up_device_to_text")]
		[Version (since = "0.9.0")]
		public string to_text ();
		[NoAccessorMethod]
		[Version (since = "1.0")]
		public uint battery_level { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double capacity { get; set; }
		[NoAccessorMethod]
		[Version (since = "1.0")]
		public int charge_cycles { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double energy { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double energy_empty { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double energy_full { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double energy_full_design { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double energy_rate { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool has_history { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool has_statistics { get; set; }
		[NoAccessorMethod]
		[Version (since = "1.0")]
		public string icon_name { owned get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool is_present { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool is_rechargeable { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public uint kind { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.19")]
		public double luminosity { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public string model { owned get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public string native_path { owned get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool online { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double percentage { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public bool power_supply { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public string serial { owned get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public uint state { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public uint technology { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.22")]
		public double temperature { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public int64 time_to_empty { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public int64 time_to_full { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public uint64 update_time { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public string vendor { owned get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double voltage { get; set; }
		[NoAccessorMethod]
		[Version (since = "1.0")]
		public uint warning_level { get; set; }
	}
	[CCode (cheader_filename = "upower.h", type_id = "up_history_item_get_type ()")]
	public class HistoryItem : GLib.Object {
		[CCode (cname = "up_history_item_new", has_construct_function = false)]
		[Version (since = "0.9.0")]
		public HistoryItem ();
		[CCode (cname = "up_history_item_get_state")]
		[Version (since = "0.9.0")]
		public Up.DeviceState get_state ();
		[CCode (cname = "up_history_item_get_time")]
		[Version (since = "0.9.0")]
		public uint get_time ();
		[CCode (cname = "up_history_item_get_value")]
		[Version (since = "0.9.0")]
		public double get_value ();
		[CCode (cname = "up_history_item_set_from_string")]
		[Version (since = "0.9.1")]
		public bool set_from_string (string text);
		[CCode (cname = "up_history_item_set_state")]
		[Version (since = "0.9.0")]
		public void set_state (Up.DeviceState state);
		[CCode (cname = "up_history_item_set_time")]
		[Version (since = "0.9.0")]
		public void set_time (uint time);
		[CCode (cname = "up_history_item_set_time_to_present")]
		[Version (since = "0.9.1")]
		public void set_time_to_present ();
		[CCode (cname = "up_history_item_set_value")]
		[Version (since = "0.9.0")]
		public void set_value (double value);
		[CCode (cname = "up_history_item_to_string")]
		[Version (since = "0.9.1")]
		public string to_string ();
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public uint state { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public uint time { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double value { get; set; }
	}
	[CCode (cheader_filename = "upower.h", type_id = "up_stats_item_get_type ()")]
	public class StatsItem : GLib.Object {
		[CCode (cname = "up_stats_item_new", has_construct_function = false)]
		[Version (since = "0.9.0")]
		public StatsItem ();
		[CCode (cname = "up_stats_item_get_accuracy")]
		[Version (since = "0.9.0")]
		public double get_accuracy ();
		[CCode (cname = "up_stats_item_get_value")]
		[Version (since = "0.9.0")]
		public double get_value ();
		[CCode (cname = "up_stats_item_set_accuracy")]
		[Version (since = "0.9.0")]
		public void set_accuracy (double accuracy);
		[CCode (cname = "up_stats_item_set_value")]
		[Version (since = "0.9.0")]
		public void set_value (double value);
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double accuracy { get; set; }
		[NoAccessorMethod]
		[Version (since = "0.9.0")]
		public double value { get; set; }
	}
	[CCode (cheader_filename = "upower.h", cprefix = "UP_DEVICE_KIND_", has_type_id = false)]
	public enum DeviceKind {
		UNKNOWN,
		LINE_POWER,
		BATTERY,
		UPS,
		MONITOR,
		MOUSE,
		KEYBOARD,
		PDA,
		PHONE,
		MEDIA_PLAYER,
		TABLET,
		COMPUTER,
		GAMING_INPUT,
		PEN,
		TOUCHPAD,
		MODEM,
		NETWORK,
		HEADSET,
		SPEAKERS,
		HEADPHONES,
		VIDEO,
		OTHER_AUDIO,
		REMOTE_CONTROL,
		PRINTER,
		SCANNER,
		CAMERA,
		WEARABLE,
		TOY,
		BLUETOOTH_GENERIC,
		LAST
	}
	[CCode (cheader_filename = "upower.h", cprefix = "UP_DEVICE_LEVEL_", has_type_id = false)]
	public enum DeviceLevel {
		UNKNOWN,
		NONE,
		DISCHARGING,
		LOW,
		CRITICAL,
		ACTION,
		NORMAL,
		HIGH,
		FULL,
		LAST
	}
	[CCode (cheader_filename = "upower.h", cprefix = "UP_DEVICE_STATE_", has_type_id = false)]
	public enum DeviceState {
		UNKNOWN,
		CHARGING,
		DISCHARGING,
		EMPTY,
		FULLY_CHARGED,
		PENDING_CHARGE,
		PENDING_DISCHARGE,
		LAST
	}
	[CCode (cheader_filename = "upower.h", cprefix = "UP_DEVICE_TECHNOLOGY_", has_type_id = false)]
	public enum DeviceTechnology {
		UNKNOWN,
		LITHIUM_ION,
		LITHIUM_POLYMER,
		LITHIUM_IRON_PHOSPHATE,
		LEAD_ACID,
		NICKEL_CADMIUM,
		NICKEL_METAL_HYDRIDE,
		LAST
	}
	[CCode (cheader_filename = "upower.h", cname = "UP_MAJOR_VERSION")]
	public const int MAJOR_VERSION;
	[CCode (cheader_filename = "upower.h", cname = "UP_MICRO_VERSION")]
	public const int MICRO_VERSION;
	[CCode (cheader_filename = "upower.h", cname = "UP_MINOR_VERSION")]
	public const int MINOR_VERSION;
}
